{"version":3,"sources":["CommandInput.tsx","TwitchPlayer.tsx","App.tsx","reportWebVitals.ts","index.tsx","RouteAdapter.tsx"],"names":["CommandInput","onAdd","onDelete","onSwap","useState","input","setInput","inputRef","useRef","className","onSubmit","event","preventDefault","rawArgs","trim","split","filter","arg","length","cmd","args","toLowerCase","console","log","ref","value","onChange","e","target","TwitchPlayer","memo","channel","useEffect","current","Twitch","Embed","width","height","layout","destroy","id","data-testid","App","useQueryParam","ArrayParam","channels","setChannels","state","Array","from","Set","slice","s","includes","channel1","channel2","parseIndex","index","parseInt","isNaN","indexOf","i1","i2","oldState","newState","map","i","size","lookupLayout","col","row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ReactRouterRoute","children","navigate","useNavigate","location","useLocation","history","useMemo","replace","push","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.7e2d6dc2.chunk.js","sourcesContent":["import { useRef, useState, FormEventHandler } from \"react\";\n\ntype CommandInputProps = {\n  onAdd: (...channel: string[]) => void;\n  onDelete: (...channel: string[]) => void;\n  onSwap: (channel1: string, channel2: string) => void;\n};\n\nexport const CommandInput: React.FC<CommandInputProps> = ({\n  onAdd,\n  onDelete,\n  onSwap,\n}) => {\n  const [input, setInput] = useState(\"\");\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleSubmit: FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n\n    const rawArgs = input\n      .trim()\n      .split(\" \")\n      .filter((arg) => arg !== \"\");\n\n    if (rawArgs.length === 0) {\n      console.log(\"early exit\");\n      return;\n    }\n\n    const [cmd, ...args] = rawArgs;\n\n    switch (cmd.toLowerCase()) {\n      case \"add\":\n        if (args.length > 0) {\n          onAdd(...args);\n        }\n        break;\n      case \"del\":\n      case \"rm\":\n        if (args.length > 0) {\n          onDelete(...args);\n        }\n        break;\n      case \"swap\":\n        if (args.length > 1) {\n          onSwap(args[0], args[1]);\n        }\n        break;\n      default:\n        console.log(`Unkown command: \"${input}\"`);\n    }\n\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"text-green-600\" onSubmit={handleSubmit}>\n      <label className=\"flex\">\n        {\">\"}\n        <input\n          className=\"bg-black flex-grow pl-1\"\n          ref={inputRef}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n        />\n      </label>\n    </form>\n  );\n};\n","import { memo, useEffect, useRef } from \"react\";\n\ntype TwitchPlayerProps = {\n  channel: string;\n  className: string;\n};\n\nexport const TwitchPlayer: React.FC<TwitchPlayerProps> = memo(\n  ({ channel, className }) => {\n    const ref = useRef();\n\n    useEffect(() => {\n      // @ts-ignore\n      ref.current = new Twitch.Embed(channel, {\n        width: \"100%\",\n        height: \"100%\",\n        layout: \"video\",\n        channel,\n      });\n\n      return () => {\n        // @ts-ignore\n        ref.current?.destroy();\n      };\n    }, [channel]);\n\n    return <div id={channel} data-testid={channel} className={className}></div>;\n  }\n);\n","import { useQueryParam, ArrayParam } from \"use-query-params\";\n\nimport { CommandInput } from \"./CommandInput\";\nimport { TwitchPlayer } from \"./TwitchPlayer\";\n\nconst MAX_STREAMS = 8;\n\nconst lookupLayout = (size: number, index: number): number[] => {\n  switch (size) {\n    case 1:\n      return [[12, 6]][index];\n    case 2:\n      return [\n        [6, 6],\n        [6, 6],\n      ][index];\n    case 3:\n      return [\n        [12, 3],\n        [6, 3],\n        [6, 3],\n      ][index];\n    case 4:\n      return [\n        [6, 3],\n        [6, 3],\n        [6, 3],\n        [6, 3],\n      ][index];\n    case 5:\n      return [\n        [6, 3],\n        [6, 3],\n        [4, 3],\n        [4, 3],\n        [4, 3],\n      ][index];\n    case 6:\n      return [\n        [4, 3],\n        [4, 3],\n        [4, 3],\n        [4, 3],\n        [4, 3],\n        [4, 3],\n      ][index];\n    case 7:\n      return [\n        [4, 3],\n        [4, 3],\n        [4, 3],\n        [3, 3],\n        [3, 3],\n        [3, 3],\n        [3, 3],\n      ][index];\n    case 8:\n      return [\n        [3, 3],\n        [3, 3],\n        [3, 3],\n        [3, 3],\n        [3, 3],\n        [3, 3],\n        [3, 3],\n        [3, 3],\n      ][index];\n    default:\n      return [];\n  }\n};\n\nfunction App() {\n  const [channels, setChannels] = useQueryParam(\"channel\", ArrayParam);\n\n  const handleChannelAdded = (...channels: string[]) => {\n    setChannels(\n      (state) =>\n        Array.from(new Set([...(state || []), ...channels])).slice(\n          0,\n          MAX_STREAMS\n        ),\n      \"replace\"\n    );\n  };\n\n  const handleChannelRemoved = (...channels: string[]) => {\n    setChannels(\n      (state) =>\n        (state || []).filter((s) => s === null || !channels.includes(s)),\n      \"replace\"\n    );\n  };\n\n  const handleChannelSwapped = (channel1: string, channel2: string) => {\n    setChannels((state) => {\n      const parseIndex = (input: string): number => {\n        let index = parseInt(input, 10);\n        return isNaN(index) ? (state || []).indexOf(input) : index;\n      };\n\n      let i1 = parseIndex(channel1);\n      let i2 = parseIndex(channel2);\n\n      if (i1 < 0 || i2 < 0) {\n        return state;\n      }\n\n      const oldState = state || [];\n      const newState = [...oldState];\n      newState[i2] = oldState[i1];\n      newState[i1] = oldState[i2];\n\n      return newState;\n    }, \"replace\");\n  };\n\n  return (\n    <div className=\"bg-black h-screen flex flex-col\">\n      <CommandInput\n        onAdd={handleChannelAdded}\n        onDelete={handleChannelRemoved}\n        onSwap={handleChannelSwapped}\n      />\n      {channels && (\n        <div className=\"flex-grow grid grid-cols-12 grid-rows-6\">\n          {channels.map((channel, i) => {\n            if (channel === null) {\n              return null;\n            }\n\n            const [col, row] = lookupLayout(channels.length, i);\n\n            return (\n              <TwitchPlayer\n                key={channel}\n                className={`col-span-${col} row-span-${row}`}\n                channel={channel}\n              />\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { QueryParamProvider } from \"use-query-params\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RouteAdapter } from \"./RouteAdapter\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <QueryParamProvider ReactRouterRoute={RouteAdapter}>\n        <Routes>\n          <Route path=\"/\" element={<App />} />\n        </Routes>\n      </QueryParamProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import { useMemo } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nexport const RouteAdapter: React.FC = ({ children }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const adaptedHistory = useMemo(\n    () => ({\n      // @ts-ignore\n      replace(location) {\n        navigate(location, { replace: true, state: location.state });\n      },\n      //@ts-ignore\n      push(location) {\n        navigate(location, { replace: false, state: location.state });\n      },\n    }),\n    [navigate]\n  );\n\n  // @ts-ignore\n  return children({ history: adaptedHistory, location });\n};\n"],"sourceRoot":""}